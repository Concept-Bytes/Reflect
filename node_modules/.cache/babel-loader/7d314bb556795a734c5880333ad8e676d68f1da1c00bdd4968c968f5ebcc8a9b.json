{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kcoda\\\\Desktop\\\\Projects\\\\Reflect\\\\src\\\\pages\\\\SmartMirror.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport DraggableApp from '../components/DraggableApp';\nimport CursorOverlay from '../components/CursorOverlay';\nimport HandTrackingService from '../components/HandTrackingService';\nimport { apps, getAppSettings } from '../data/apps';\n\n// Import all app components\nimport ClockApp from '../apps/ClockApp';\nimport DateApp from '../apps/DateApp';\nimport WeatherApp from '../apps/WeatherApp';\nimport NewsApp from '../apps/NewsApp';\nimport SpotifyApp from '../apps/SpotifyApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmartMirror = () => {\n  _s();\n  const [enabledApps, setEnabledApps] = useState([]);\n  const containerRef = useRef(null);\n  const [cursorPosition, setCursorPosition] = useState({\n    x: 0,\n    y: 0,\n    detected: false\n  });\n  const [handTrackingEnabled, setHandTrackingEnabled] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragTarget, setDragTarget] = useState(null);\n  const dragTargetRef = useRef(null); // Immediate reference for drag logic\n  const [appPositions, setAppPositions] = useState({}); // Track positions for each app\n\n  const clearDragState = () => {\n    // Clear all app highlights first\n    const allApps = document.querySelectorAll('[data-app-id]');\n    allApps.forEach(app => {\n      app.style.transition = '';\n      app.style.boxShadow = '';\n      app.style.transform = '';\n      app.style.zIndex = '';\n      app.style.pointerEvents = '';\n    });\n    setIsDragging(false);\n    setDragTarget(null);\n    dragTargetRef.current = null; // Clear ref immediately\n    // Don't clear appPositions here as they need to persist for the final save\n  };\n  useEffect(() => {\n    // Get enabled apps that are not background services\n    const getVisibleApps = () => {\n      const settings = JSON.parse(localStorage.getItem('smartMirrorSettings') || '{}');\n      return apps.filter(app => {\n        var _settings$app$id;\n        return !app.isBackgroundService &&\n        // Filter out background services\n        ((_settings$app$id = settings[app.id]) === null || _settings$app$id === void 0 ? void 0 : _settings$app$id.enabled) !== false;\n      });\n    };\n    setEnabledApps(getVisibleApps());\n\n    // Check if hand tracking is enabled\n    const handTrackingSettings = getAppSettings('handtracking');\n\n    // TEMPORARY: Force enable hand tracking for debugging\n    const forceEnabled = true; // Set this to false when done debugging\n    setHandTrackingEnabled(forceEnabled || handTrackingSettings.enabled || false);\n\n    // Listen for settings changes\n    const handleStorageChange = () => {\n      setEnabledApps(getVisibleApps());\n      const updatedHandTrackingSettings = getAppSettings('handtracking');\n      setHandTrackingEnabled(updatedHandTrackingSettings.enabled || false);\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      // Clean up any drag state on unmount\n      clearDragState();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleHandPosition = position => {\n    setCursorPosition(position);\n\n    // Always clear highlights when not pinching or hand not detected\n    if ((!position.isPinching || !position.detected) && !isDragging) {\n      clearDragState();\n    }\n\n    // Handle pinch-to-drag functionality\n    if (position.detected && position.isPinching) {\n      if (!dragTargetRef.current) {\n        // Start dragging - find all apps and check which one is under cursor\n        const allApps = document.querySelectorAll('[data-app-id]');\n        let targetApp = null;\n        let highestZIndex = -1;\n        allApps.forEach(app => {\n          const rect = app.getBoundingClientRect();\n          const isUnderCursor = position.x >= rect.left && position.x <= rect.right && position.y >= rect.top && position.y <= rect.bottom;\n          if (isUnderCursor) {\n            const zIndex = parseInt(window.getComputedStyle(app).zIndex) || 0;\n            if (zIndex >= highestZIndex) {\n              highestZIndex = zIndex;\n              targetApp = app;\n            }\n          }\n        });\n        if (targetApp) {\n          var _containerRef$current;\n          // Clear any existing highlights\n          clearDragState();\n          setIsDragging(true);\n          const rect = targetApp.getBoundingClientRect();\n          const containerRect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n          const dragTargetData = {\n            appId: targetApp.dataset.appId,\n            element: targetApp,\n            startX: position.x,\n            startY: position.y,\n            offsetX: position.x - rect.left,\n            offsetY: position.y - rect.top,\n            initialPosition: {\n              x: containerRect ? rect.left - containerRect.left : rect.left,\n              y: containerRect ? rect.top - containerRect.top : rect.top\n            }\n          };\n          setDragTarget(dragTargetData);\n          dragTargetRef.current = dragTargetData; // Set ref immediately\n\n          // Add visual feedback with lower z-index than cursor\n          targetApp.style.transition = 'none';\n          targetApp.style.boxShadow = '0 0 20px rgba(59, 130, 246, 0.8)';\n          targetApp.style.transform = 'none'; // NO TRANSFORM DURING DRAG - interferes with positioning\n          targetApp.style.zIndex = '1000'; // Still below cursor at 9999\n\n          // Force immediate position update to prevent lag\n          targetApp.style.pointerEvents = 'none';\n        }\n      } else {\n        var _containerRef$current2, _currentDragTarget$el, _currentDragTarget$el2;\n        const currentDragTarget = dragTargetRef.current;\n        // Continue dragging - calculate new position using React state\n        const containerRect = (_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.getBoundingClientRect();\n        const appWidth = ((_currentDragTarget$el = currentDragTarget.element) === null || _currentDragTarget$el === void 0 ? void 0 : _currentDragTarget$el.offsetWidth) || 300;\n        const appHeight = ((_currentDragTarget$el2 = currentDragTarget.element) === null || _currentDragTarget$el2 === void 0 ? void 0 : _currentDragTarget$el2.offsetHeight) || 200;\n        const containerWidth = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || window.innerWidth;\n        const containerHeight = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.height) || window.innerHeight;\n\n        // Calculate new position relative to the initial drag start\n        const deltaX = position.x - currentDragTarget.startX;\n        const deltaY = position.y - currentDragTarget.startY;\n        const newLeft = Math.max(0, Math.min(containerWidth - appWidth, currentDragTarget.initialPosition.x + deltaX));\n        const newTop = Math.max(0, Math.min(containerHeight - appHeight, currentDragTarget.initialPosition.y + deltaY));\n\n        // Update position in React state and force immediate DOM update\n        const newPosition = {\n          x: newLeft,\n          y: newTop\n        };\n        setAppPositions(prev => ({\n          ...prev,\n          [currentDragTarget.appId]: newPosition\n        }));\n\n        // Force immediate visual update to the DOM element for smoother dragging\n        if (currentDragTarget.element) {\n          currentDragTarget.element.style.left = `${newLeft}px`;\n          currentDragTarget.element.style.top = `${newTop}px`;\n        }\n      }\n    } else if (isDragging && dragTarget) {\n      var _dragTarget$element, _dragTarget$element2;\n      // Stop dragging\n\n      // Get final position from state\n      const finalPosition = appPositions[dragTarget.appId] || dragTarget.initialPosition;\n\n      // Save final position using the same key as DraggableApp\n      const layout = {\n        position: {\n          x: finalPosition.x,\n          y: finalPosition.y\n        },\n        size: {\n          width: ((_dragTarget$element = dragTarget.element) === null || _dragTarget$element === void 0 ? void 0 : _dragTarget$element.offsetWidth) || 300,\n          height: ((_dragTarget$element2 = dragTarget.element) === null || _dragTarget$element2 === void 0 ? void 0 : _dragTarget$element2.offsetHeight) || 200\n        }\n      };\n      localStorage.setItem(`smartMirror_${dragTarget.appId}_layout`, JSON.stringify(layout));\n      // Notify listeners in this tab\n      try {\n        window.dispatchEvent(new Event('storage'));\n      } catch (_) {}\n\n      // Clean up and reset state\n      clearDragState();\n    }\n  };\n\n  // Component mapping\n  const componentMap = {\n    ClockApp,\n    DateApp,\n    WeatherApp,\n    NewsApp,\n    SpotifyApp\n  };\n  const renderApp = app => {\n    const AppComponent = componentMap[app.componentPath];\n    if (!AppComponent) {\n      console.error(`Component not found: ${app.componentPath}`);\n      return null;\n    }\n    const isBeingDragged = isDragging && (dragTarget === null || dragTarget === void 0 ? void 0 : dragTarget.appId) === app.id;\n    const externalPosition = appPositions[app.id];\n    return /*#__PURE__*/_jsxDEV(DraggableApp, {\n      appId: app.id,\n      initialPosition: app.defaultPosition,\n      initialSize: app.defaultSize,\n      externalPosition: externalPosition,\n      isExternallyDragged: isBeingDragged,\n      children: /*#__PURE__*/_jsxDEV(AppComponent, {\n        appId: app.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, app.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"w-screen h-screen bg-black overflow-hidden relative\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/settings\",\n      className: \"absolute top-4 right-4 z-50 bg-white/10 hover:bg-white/20 backdrop-blur-sm rounded-full p-3 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6 text-white\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HandTrackingService, {\n      onHandPosition: handleHandPosition,\n      settings: getAppSettings('handtracking'),\n      enabled: handTrackingEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), enabledApps.map(renderApp), /*#__PURE__*/_jsxDEV(CursorOverlay, {\n      position: cursorPosition,\n      isVisible: handTrackingEnabled && cursorPosition.detected,\n      isDragging: isDragging\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), enabledApps.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white/70\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6xl mb-4\",\n          children: \"\\uD83E\\uDE9F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl mb-2\",\n          children: \"Smart Mirror\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg mb-4\",\n          children: \"No apps enabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/settings\",\n          className: \"bg-white/20 hover:bg-white/30 px-6 py-3 rounded-lg transition-colors\",\n          children: \"Go to Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(SmartMirror, \"CH7/BtzVcDCE0xJTVRkYEh8xgOw=\");\n_c = SmartMirror;\nexport default SmartMirror;\nvar _c;\n$RefreshReg$(_c, \"SmartMirror\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","DraggableApp","CursorOverlay","HandTrackingService","apps","getAppSettings","ClockApp","DateApp","WeatherApp","NewsApp","SpotifyApp","jsxDEV","_jsxDEV","SmartMirror","_s","enabledApps","setEnabledApps","containerRef","cursorPosition","setCursorPosition","x","y","detected","handTrackingEnabled","setHandTrackingEnabled","isDragging","setIsDragging","dragTarget","setDragTarget","dragTargetRef","appPositions","setAppPositions","clearDragState","allApps","document","querySelectorAll","forEach","app","style","transition","boxShadow","transform","zIndex","pointerEvents","current","getVisibleApps","settings","JSON","parse","localStorage","getItem","filter","_settings$app$id","isBackgroundService","id","enabled","handTrackingSettings","forceEnabled","handleStorageChange","updatedHandTrackingSettings","window","addEventListener","removeEventListener","handleHandPosition","position","isPinching","targetApp","highestZIndex","rect","getBoundingClientRect","isUnderCursor","left","right","top","bottom","parseInt","getComputedStyle","_containerRef$current","containerRect","dragTargetData","appId","dataset","element","startX","startY","offsetX","offsetY","initialPosition","_containerRef$current2","_currentDragTarget$el","_currentDragTarget$el2","currentDragTarget","appWidth","offsetWidth","appHeight","offsetHeight","containerWidth","width","innerWidth","containerHeight","height","innerHeight","deltaX","deltaY","newLeft","Math","max","min","newTop","newPosition","prev","_dragTarget$element","_dragTarget$element2","finalPosition","layout","size","setItem","stringify","dispatchEvent","Event","_","componentMap","renderApp","AppComponent","componentPath","console","error","isBeingDragged","externalPosition","defaultPosition","initialSize","defaultSize","isExternallyDragged","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","to","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onHandPosition","map","isVisible","length","_c","$RefreshReg$"],"sources":["C:/Users/Kcoda/Desktop/Projects/Reflect/src/pages/SmartMirror.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DraggableApp from '../components/DraggableApp';\r\nimport CursorOverlay from '../components/CursorOverlay';\r\nimport HandTrackingService from '../components/HandTrackingService';\r\nimport { apps, getAppSettings } from '../data/apps';\r\n\r\n// Import all app components\r\nimport ClockApp from '../apps/ClockApp';\r\nimport DateApp from '../apps/DateApp';\r\nimport WeatherApp from '../apps/WeatherApp';\r\nimport NewsApp from '../apps/NewsApp';\r\nimport SpotifyApp from '../apps/SpotifyApp';\r\n\r\nconst SmartMirror = () => {\r\n  const [enabledApps, setEnabledApps] = useState([]);\r\n  const containerRef = useRef(null);\r\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0, detected: false });\r\n  const [handTrackingEnabled, setHandTrackingEnabled] = useState(false);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragTarget, setDragTarget] = useState(null);\r\n  const dragTargetRef = useRef(null); // Immediate reference for drag logic\r\n  const [appPositions, setAppPositions] = useState({}); // Track positions for each app\r\n\r\n  const clearDragState = () => {\r\n    // Clear all app highlights first\r\n    const allApps = document.querySelectorAll('[data-app-id]');\r\n    allApps.forEach(app => {\r\n      app.style.transition = '';\r\n      app.style.boxShadow = '';\r\n      app.style.transform = '';\r\n      app.style.zIndex = '';\r\n      app.style.pointerEvents = '';\r\n    });\r\n    \r\n    setIsDragging(false);\r\n    setDragTarget(null);\r\n    dragTargetRef.current = null; // Clear ref immediately\r\n    // Don't clear appPositions here as they need to persist for the final save\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get enabled apps that are not background services\r\n    const getVisibleApps = () => {\r\n      const settings = JSON.parse(localStorage.getItem('smartMirrorSettings') || '{}');\r\n      return apps.filter(app => \r\n        !app.isBackgroundService && // Filter out background services\r\n        settings[app.id]?.enabled !== false\r\n      );\r\n    };\r\n    \r\n    setEnabledApps(getVisibleApps());\r\n    \r\n    // Check if hand tracking is enabled\r\n    const handTrackingSettings = getAppSettings('handtracking');\r\n    \r\n    // TEMPORARY: Force enable hand tracking for debugging\r\n    const forceEnabled = true; // Set this to false when done debugging\r\n    setHandTrackingEnabled(forceEnabled || handTrackingSettings.enabled || false);\r\n    \r\n    // Listen for settings changes\r\n    const handleStorageChange = () => {\r\n      setEnabledApps(getVisibleApps());\r\n      const updatedHandTrackingSettings = getAppSettings('handtracking');\r\n      setHandTrackingEnabled(updatedHandTrackingSettings.enabled || false);\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n      // Clean up any drag state on unmount\r\n      clearDragState();\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleHandPosition = (position) => {\r\n    setCursorPosition(position);\r\n    \r\n    // Always clear highlights when not pinching or hand not detected\r\n    if ((!position.isPinching || !position.detected) && !isDragging) {\r\n      clearDragState();\r\n    }\r\n    \r\n    // Handle pinch-to-drag functionality\r\n    if (position.detected && position.isPinching) {\r\n      if (!dragTargetRef.current) {\r\n        // Start dragging - find all apps and check which one is under cursor\r\n        const allApps = document.querySelectorAll('[data-app-id]');\r\n        let targetApp = null;\r\n        let highestZIndex = -1;\r\n        \r\n        allApps.forEach(app => {\r\n          const rect = app.getBoundingClientRect();\r\n          const isUnderCursor = position.x >= rect.left && \r\n                               position.x <= rect.right && \r\n                               position.y >= rect.top && \r\n                               position.y <= rect.bottom;\r\n          \r\n          if (isUnderCursor) {\r\n            const zIndex = parseInt(window.getComputedStyle(app).zIndex) || 0;\r\n            if (zIndex >= highestZIndex) {\r\n              highestZIndex = zIndex;\r\n              targetApp = app;\r\n            }\r\n          }\r\n        });\r\n        \r\n        if (targetApp) {\r\n          // Clear any existing highlights\r\n          clearDragState();\r\n          \r\n          setIsDragging(true);\r\n          const rect = targetApp.getBoundingClientRect();\r\n          const containerRect = containerRef.current?.getBoundingClientRect();\r\n          \r\n          const dragTargetData = {\r\n            appId: targetApp.dataset.appId,\r\n            element: targetApp,\r\n            startX: position.x,\r\n            startY: position.y,\r\n            offsetX: position.x - rect.left,\r\n            offsetY: position.y - rect.top,\r\n            initialPosition: {\r\n              x: containerRect ? rect.left - containerRect.left : rect.left,\r\n              y: containerRect ? rect.top - containerRect.top : rect.top\r\n            }\r\n          };\r\n          \r\n          setDragTarget(dragTargetData);\r\n          dragTargetRef.current = dragTargetData; // Set ref immediately\r\n          \r\n          // Add visual feedback with lower z-index than cursor\r\n          targetApp.style.transition = 'none';\r\n          targetApp.style.boxShadow = '0 0 20px rgba(59, 130, 246, 0.8)';\r\n          targetApp.style.transform = 'none'; // NO TRANSFORM DURING DRAG - interferes with positioning\r\n          targetApp.style.zIndex = '1000'; // Still below cursor at 9999\r\n          \r\n          // Force immediate position update to prevent lag\r\n          targetApp.style.pointerEvents = 'none';\r\n        }\r\n      } else {\r\n        const currentDragTarget = dragTargetRef.current;\r\n        // Continue dragging - calculate new position using React state\r\n        const containerRect = containerRef.current?.getBoundingClientRect();\r\n        const appWidth = currentDragTarget.element?.offsetWidth || 300;\r\n        const appHeight = currentDragTarget.element?.offsetHeight || 200;\r\n        const containerWidth = containerRect?.width || window.innerWidth;\r\n        const containerHeight = containerRect?.height || window.innerHeight;\r\n\r\n        // Calculate new position relative to the initial drag start\r\n        const deltaX = position.x - currentDragTarget.startX;\r\n        const deltaY = position.y - currentDragTarget.startY;\r\n        \r\n        const newLeft = Math.max(0, Math.min(containerWidth - appWidth, currentDragTarget.initialPosition.x + deltaX));\r\n        const newTop = Math.max(0, Math.min(containerHeight - appHeight, currentDragTarget.initialPosition.y + deltaY));\r\n        \r\n        // Update position in React state and force immediate DOM update\r\n        const newPosition = { x: newLeft, y: newTop };\r\n        \r\n        setAppPositions(prev => ({\r\n          ...prev,\r\n          [currentDragTarget.appId]: newPosition\r\n        }));\r\n        \r\n        // Force immediate visual update to the DOM element for smoother dragging\r\n        if (currentDragTarget.element) {\r\n          currentDragTarget.element.style.left = `${newLeft}px`;\r\n          currentDragTarget.element.style.top = `${newTop}px`;\r\n        }\r\n      }\r\n    } else if (isDragging && dragTarget) {\r\n      // Stop dragging\r\n      \r\n      // Get final position from state\r\n      const finalPosition = appPositions[dragTarget.appId] || dragTarget.initialPosition;\r\n      \r\n      // Save final position using the same key as DraggableApp\r\n      const layout = {\r\n        position: { x: finalPosition.x, y: finalPosition.y },\r\n        size: { \r\n          width: dragTarget.element?.offsetWidth || 300, \r\n          height: dragTarget.element?.offsetHeight || 200\r\n        }\r\n      };\r\n      localStorage.setItem(`smartMirror_${dragTarget.appId}_layout`, JSON.stringify(layout));\r\n      // Notify listeners in this tab\r\n      try { window.dispatchEvent(new Event('storage')); } catch (_) {}\r\n      \r\n      // Clean up and reset state\r\n      clearDragState();\r\n    }\r\n  };\r\n\r\n  // Component mapping\r\n  const componentMap = {\r\n    ClockApp,\r\n    DateApp,\r\n    WeatherApp,\r\n    NewsApp,\r\n    SpotifyApp\r\n  };\r\n\r\n  const renderApp = (app) => {\r\n    const AppComponent = componentMap[app.componentPath];\r\n    \r\n    if (!AppComponent) {\r\n      console.error(`Component not found: ${app.componentPath}`);\r\n      return null;\r\n    }\r\n\r\n    const isBeingDragged = isDragging && dragTarget?.appId === app.id;\r\n    const externalPosition = appPositions[app.id];\r\n\r\n    return (\r\n      <DraggableApp\r\n        key={app.id}\r\n        appId={app.id}\r\n        initialPosition={app.defaultPosition}\r\n        initialSize={app.defaultSize}\r\n        externalPosition={externalPosition}\r\n        isExternallyDragged={isBeingDragged}\r\n      >\r\n        <AppComponent appId={app.id} />\r\n      </DraggableApp>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"w-screen h-screen bg-black overflow-hidden relative\">\r\n      {/* Settings Button */}\r\n      <Link \r\n        to=\"/settings\"\r\n        className=\"absolute top-4 right-4 z-50 bg-white/10 hover:bg-white/20 backdrop-blur-sm rounded-full p-3 transition-colors\"\r\n      >\r\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n        </svg>\r\n      </Link>\r\n\r\n      {/* Background Hand Tracking Service */}\r\n      <HandTrackingService \r\n        onHandPosition={handleHandPosition}\r\n        settings={getAppSettings('handtracking')}\r\n        enabled={handTrackingEnabled}\r\n      />\r\n      \r\n\r\n\r\n      {/* Render enabled apps */}\r\n      {enabledApps.map(renderApp)}\r\n\r\n      {/* Hand tracking cursor overlay */}\r\n      <CursorOverlay \r\n        position={cursorPosition} \r\n        isVisible={handTrackingEnabled && cursorPosition.detected}\r\n        isDragging={isDragging}\r\n      />\r\n\r\n      {/* Instructions overlay (only show if no apps are enabled) */}\r\n      {enabledApps.length === 0 && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"text-center text-white/70\">\r\n            <div className=\"text-6xl mb-4\">🪟</div>\r\n            <div className=\"text-2xl mb-2\">Smart Mirror</div>\r\n            <div className=\"text-lg mb-4\">No apps enabled</div>\r\n            <Link \r\n              to=\"/settings\"\r\n              className=\"bg-white/20 hover:bg-white/30 px-6 py-3 rounded-lg transition-colors\"\r\n            >\r\n              Go to Settings\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartMirror;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}