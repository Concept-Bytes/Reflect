{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kcoda\\\\Desktop\\\\Projects\\\\Reflect\\\\src\\\\apps\\\\ClockApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { getAppSettings } from '../data/apps';\nimport { useTheme } from '../context/ThemeContext';\nimport { useElementSize } from '../hooks/useElementSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockApp = ({\n  appId = 'clock'\n}) => {\n  _s();\n  const [time, setTime] = useState(new Date());\n  const [settings, setSettings] = useState(getAppSettings(appId));\n  const {\n    theme\n  } = useTheme();\n  const {\n    ref,\n    width,\n    height\n  } = useElementSize();\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    setSettings(getAppSettings(appId));\n  }, [appId]);\n\n  // Live update when settings change elsewhere\n  useEffect(() => {\n    const handleStorage = () => setSettings(getAppSettings(appId));\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [appId]);\n  const formatTime = date => {\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: !settings.format24h\n    };\n    if (settings.showSeconds) {\n      options.second = '2-digit';\n    }\n    return date.toLocaleTimeString([], options);\n  };\n  const layout = useMemo(() => {\n    const minDim = Math.max(1, Math.min(width, height));\n    const base = Math.round(minDim / 300 * 48);\n    const hhmmSize = Math.max(20, Math.min(180, base));\n    const secSize = Math.max(14, Math.min(120, Math.floor(hhmmSize * 0.45)));\n    const ampmSize = Math.max(12, Math.min(80, Math.floor(hhmmSize * 0.35)));\n    const vertical = height > width * 1.2;\n    return {\n      hhmmSize,\n      secSize,\n      ampmSize,\n      vertical\n    };\n  }, [width, height]);\n  const timeString = formatTime(time);\n  const parts = timeString.split(':');\n  const hasSeconds = parts.length === 3;\n  const hhmm = hasSeconds ? `${parts[0]}:${parts[1]}` : timeString;\n  const seconds = hasSeconds ? parts[2].split(' ')[0] : null;\n  const ampm = !settings.format24h ? time.toLocaleTimeString([], {\n    hour12: true\n  }).split(' ')[1] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"w-full h-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: layout.vertical ? 'flex flex-col items-center' : 'flex items-baseline items-center',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-mono font-bold text-white leading-none\",\n        style: {\n          fontSize: `${layout.hhmmSize}px`\n        },\n        children: hhmm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), settings.showSeconds && seconds && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: layout.vertical ? 'mt-0.5' : 'ml-1',\n        style: {\n          color: theme.accent,\n          fontSize: `${layout.secSize}px`,\n          lineHeight: 1\n        },\n        children: [\":\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), ampm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: layout.vertical ? 'mt-0.5' : 'ml-1',\n        style: {\n          color: theme.accent,\n          fontSize: `${layout.ampmSize}px`,\n          lineHeight: 1\n        },\n        children: ampm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockApp, \"Vjwwam8UDkI3Tq0RXaoSIetm8QQ=\", false, function () {\n  return [useTheme, useElementSize];\n});\n_c = ClockApp;\nexport default ClockApp;\nvar _c;\n$RefreshReg$(_c, \"ClockApp\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","getAppSettings","useTheme","useElementSize","jsxDEV","_jsxDEV","ClockApp","appId","_s","time","setTime","Date","settings","setSettings","theme","ref","width","height","timer","setInterval","clearInterval","handleStorage","window","addEventListener","removeEventListener","formatTime","date","options","hour","minute","hour12","format24h","showSeconds","second","toLocaleTimeString","layout","minDim","Math","max","min","base","round","hhmmSize","secSize","floor","ampmSize","vertical","timeString","parts","split","hasSeconds","length","hhmm","seconds","ampm","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","color","accent","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/Kcoda/Desktop/Projects/Reflect/src/apps/ClockApp.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { getAppSettings } from '../data/apps';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { useElementSize } from '../hooks/useElementSize';\r\n\r\nconst ClockApp = ({ appId = 'clock' }) => {\r\n  const [time, setTime] = useState(new Date());\r\n  const [settings, setSettings] = useState(getAppSettings(appId));\r\n  const { theme } = useTheme();\r\n  const { ref, width, height } = useElementSize();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSettings(getAppSettings(appId));\r\n  }, [appId]);\r\n\r\n  // Live update when settings change elsewhere\r\n  useEffect(() => {\r\n    const handleStorage = () => setSettings(getAppSettings(appId));\r\n    window.addEventListener('storage', handleStorage);\r\n    return () => window.removeEventListener('storage', handleStorage);\r\n  }, [appId]);\r\n\r\n  const formatTime = (date) => {\r\n    const options = {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: !settings.format24h\r\n    };\r\n\r\n    if (settings.showSeconds) {\r\n      options.second = '2-digit';\r\n    }\r\n\r\n    return date.toLocaleTimeString([], options);\r\n  };\r\n\r\n  const layout = useMemo(() => {\r\n    const minDim = Math.max(1, Math.min(width, height));\r\n    const base = Math.round((minDim / 300) * 48);\r\n    const hhmmSize = Math.max(20, Math.min(180, base));\r\n    const secSize = Math.max(14, Math.min(120, Math.floor(hhmmSize * 0.45)));\r\n    const ampmSize = Math.max(12, Math.min(80, Math.floor(hhmmSize * 0.35)));\r\n    const vertical = height > width * 1.2;\r\n    return { hhmmSize, secSize, ampmSize, vertical };\r\n  }, [width, height]);\r\n\r\n  const timeString = formatTime(time);\r\n  const parts = timeString.split(':');\r\n  const hasSeconds = parts.length === 3;\r\n  const hhmm = hasSeconds ? `${parts[0]}:${parts[1]}` : timeString;\r\n  const seconds = hasSeconds ? parts[2].split(' ')[0] : null;\r\n  const ampm = !settings.format24h ? time.toLocaleTimeString([], { hour12: true }).split(' ')[1] : null;\r\n\r\n  return (\r\n    <div ref={ref} className=\"w-full h-full flex items-center justify-center\">\r\n      <div className={layout.vertical ? 'flex flex-col items-center' : 'flex items-baseline items-center'}>\r\n        <div\r\n          className=\"font-mono font-bold text-white leading-none\"\r\n          style={{ fontSize: `${layout.hhmmSize}px` }}\r\n        >\r\n          {hhmm}\r\n        </div>\r\n        {settings.showSeconds && seconds && (\r\n          <div\r\n            className={layout.vertical ? 'mt-0.5' : 'ml-1'}\r\n            style={{ color: theme.accent, fontSize: `${layout.secSize}px`, lineHeight: 1 }}\r\n          >\r\n            :{seconds}\r\n          </div>\r\n        )}\r\n        {ampm && (\r\n          <div\r\n            className={layout.vertical ? 'mt-0.5' : 'ml-1'}\r\n            style={{ color: theme.accent, fontSize: `${layout.ampmSize}px`, lineHeight: 1 }}\r\n          >\r\n            {ampm}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClockApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}