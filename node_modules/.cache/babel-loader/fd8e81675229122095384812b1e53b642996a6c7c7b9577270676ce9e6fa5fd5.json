{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kcoda\\\\Desktop\\\\Projects\\\\Reflect\\\\src\\\\apps\\\\ClockApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAppSettings } from '../data/apps';\nimport { useTheme } from '../context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockApp = ({\n  appId = 'clock'\n}) => {\n  _s();\n  const [time, setTime] = useState(new Date());\n  const [settings, setSettings] = useState(getAppSettings(appId));\n  const {\n    theme\n  } = useTheme();\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    setSettings(getAppSettings(appId));\n  }, [appId]);\n\n  // Live update when settings change elsewhere\n  useEffect(() => {\n    const handleStorage = () => setSettings(getAppSettings(appId));\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [appId]);\n  const formatTime = date => {\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: !settings.format24h\n    };\n    if (settings.showSeconds) {\n      options.second = '2-digit';\n    }\n    return date.toLocaleTimeString([], options);\n  };\n  const getFontSize = () => {\n    switch (settings.fontSize) {\n      case 'small':\n        return 'text-2xl';\n      case 'medium':\n        return 'text-4xl';\n      case 'large':\n        return 'text-6xl';\n      default:\n        return 'text-4xl';\n    }\n  };\n  const timeString = formatTime(time);\n  const parts = timeString.split(':');\n  const hasSeconds = parts.length === 3;\n  const hhmm = hasSeconds ? `${parts[0]}:${parts[1]}` : timeString;\n  const seconds = hasSeconds ? parts[2].split(' ')[0] : null;\n  const ampm = !settings.format24h ? time.toLocaleTimeString([], {\n    hour12: true\n  }).split(' ')[1] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font-mono font-bold text-white ${getFontSize()}`,\n        children: [hhmm, settings.showSeconds && seconds && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-1\",\n          style: {\n            color: theme.accent\n          },\n          children: [\":\", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), ampm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg mt-1\",\n        style: {\n          color: 'rgba(255,255,255,0.7)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono\",\n          style: {\n            color: theme.accent\n          },\n          children: ampm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockApp, \"1yL6i3m7JGAfqJy77agKqeiCNFA=\", false, function () {\n  return [useTheme];\n});\n_c = ClockApp;\nexport default ClockApp;\nvar _c;\n$RefreshReg$(_c, \"ClockApp\");","map":{"version":3,"names":["React","useState","useEffect","getAppSettings","useTheme","jsxDEV","_jsxDEV","ClockApp","appId","_s","time","setTime","Date","settings","setSettings","theme","timer","setInterval","clearInterval","handleStorage","window","addEventListener","removeEventListener","formatTime","date","options","hour","minute","hour12","format24h","showSeconds","second","toLocaleTimeString","getFontSize","fontSize","timeString","parts","split","hasSeconds","length","hhmm","seconds","ampm","className","children","style","color","accent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kcoda/Desktop/Projects/Reflect/src/apps/ClockApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAppSettings } from '../data/apps';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\nconst ClockApp = ({ appId = 'clock' }) => {\r\n  const [time, setTime] = useState(new Date());\r\n  const [settings, setSettings] = useState(getAppSettings(appId));\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSettings(getAppSettings(appId));\r\n  }, [appId]);\r\n\r\n  // Live update when settings change elsewhere\r\n  useEffect(() => {\r\n    const handleStorage = () => setSettings(getAppSettings(appId));\r\n    window.addEventListener('storage', handleStorage);\r\n    return () => window.removeEventListener('storage', handleStorage);\r\n  }, [appId]);\r\n\r\n  const formatTime = (date) => {\r\n    const options = {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: !settings.format24h\r\n    };\r\n\r\n    if (settings.showSeconds) {\r\n      options.second = '2-digit';\r\n    }\r\n\r\n    return date.toLocaleTimeString([], options);\r\n  };\r\n\r\n  const getFontSize = () => {\r\n    switch (settings.fontSize) {\r\n      case 'small': return 'text-2xl';\r\n      case 'medium': return 'text-4xl';\r\n      case 'large': return 'text-6xl';\r\n      default: return 'text-4xl';\r\n    }\r\n  };\r\n\r\n  const timeString = formatTime(time);\r\n  const parts = timeString.split(':');\r\n  const hasSeconds = parts.length === 3;\r\n  const hhmm = hasSeconds ? `${parts[0]}:${parts[1]}` : timeString;\r\n  const seconds = hasSeconds ? parts[2].split(' ')[0] : null;\r\n  const ampm = !settings.format24h ? time.toLocaleTimeString([], { hour12: true }).split(' ')[1] : null;\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex items-center justify-center p-4\">\r\n      <div className=\"text-center\">\r\n        <div className={`font-mono font-bold text-white ${getFontSize()}`}>\r\n          {hhmm}\r\n          {settings.showSeconds && seconds && (\r\n            <span className=\"ml-1\" style={{ color: theme.accent }}>:{seconds}</span>\r\n          )}\r\n        </div>\r\n        {ampm && (\r\n          <div className=\"text-lg mt-1\" style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n            <span className=\"font-mono\" style={{ color: theme.accent }}>{ampm}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClockApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}