{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kcoda\\\\Desktop\\\\Projects\\\\Reflect\\\\src\\\\components\\\\HandTrackingService.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Hands } from '@mediapipe/hands';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\n// Define hand connections manually if import fails\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HAND_CONNECTIONS = [[0, 1], [1, 2], [2, 3], [3, 4],\n// Thumb\n[0, 5], [5, 6], [6, 7], [7, 8],\n// Index finger\n[0, 9], [9, 10], [10, 11], [11, 12],\n// Middle finger\n[0, 13], [13, 14], [14, 15], [15, 16],\n// Ring finger\n[0, 17], [17, 18], [18, 19], [19, 20],\n// Pinky\n[5, 9], [9, 13], [13, 17] // Palm connections\n];\nconst HandTrackingService = ({\n  onHandPosition,\n  settings = {},\n  enabled\n}) => {\n  _s();\n  var _ref;\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [hands, setHands] = useState(null); // eslint-disable-line no-unused-vars\n  const [camera, setCamera] = useState(null);\n  const [isEnabled, setIsEnabled] = useState((_ref = enabled !== null && enabled !== void 0 ? enabled : settings.enabled) !== null && _ref !== void 0 ? _ref : false);\n  const [showPreview, setShowPreview] = useState(settings.showPreview || false);\n  const [previewPosition, setPreviewPosition] = useState({\n    x: 16,\n    y: 16\n  }); // Default position (top-4 left-4 = 16px)\n  const [isDraggingPreview, setIsDraggingPreview] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    var _ref2;\n    setIsEnabled((_ref2 = enabled !== null && enabled !== void 0 ? enabled : settings.enabled) !== null && _ref2 !== void 0 ? _ref2 : false);\n    setShowPreview(settings.showPreview || false);\n  }, [enabled, settings]);\n  useEffect(() => {\n    if (!isEnabled) {\n      // Clean up when disabled\n      if (camera) {\n        camera.stop();\n        setCamera(null);\n      }\n      if (onHandPosition) {\n        onHandPosition({\n          detected: false\n        });\n      }\n      return;\n    }\n    const initializeHandTracking = async () => {\n      try {\n        // Initialize MediaPipe Hands\n        const handsInstance = new Hands({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n          }\n        });\n        handsInstance.setOptions({\n          maxNumHands: 1,\n          modelComplexity: 1,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        handsInstance.onResults(onResults);\n        setHands(handsInstance);\n\n        // Initialize camera\n        if (videoRef.current) {\n          const cameraInstance = new Camera(videoRef.current, {\n            onFrame: async () => {\n              await handsInstance.send({\n                image: videoRef.current\n              });\n            },\n            width: 640,\n            height: 480\n          });\n          await cameraInstance.start();\n          setCamera(cameraInstance);\n        }\n      } catch (error) {\n        console.error('Error initializing hand tracking:', error);\n      }\n    };\n    initializeHandTracking();\n    return () => {\n      if (camera) {\n        camera.stop();\n      }\n    };\n  }, [isEnabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onResults = results => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (!canvas || !video) return;\n    const ctx = canvas.getContext('2d');\n    const w = canvas.width = video.videoWidth;\n    const h = canvas.height = video.videoHeight;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, w, h);\n\n    // Draw the video frame if preview is enabled\n    if (showPreview) {\n      ctx.drawImage(video, 0, 0, w, h);\n    }\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      const hand = results.multiHandLandmarks[0];\n\n      // Get thumb tip (landmark 4) and index tip (landmark 8)\n      const thumbTip = hand[4];\n      const indexTip = hand[8];\n      if (showPreview) {\n        // Draw hand connections\n        drawConnectors(ctx, hand, HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 2\n        });\n\n        // Draw all landmarks\n        drawLandmarks(ctx, hand, {\n          color: '#FF0000',\n          lineWidth: 1\n        });\n\n        // Highlight thumb tip and index finger tip\n        const tx = thumbTip.x * w;\n        const ty = thumbTip.y * h;\n        const ix = indexTip.x * w;\n        const iy = indexTip.y * h;\n\n        // Draw thumb tip\n        ctx.beginPath();\n        ctx.arc(tx, ty, 6, 0, 2 * Math.PI);\n        ctx.fillStyle = '#FF00FF'; // Magenta for thumb\n        ctx.fill();\n\n        // Draw index tip\n        ctx.beginPath();\n        ctx.arc(ix, iy, 6, 0, 2 * Math.PI);\n        ctx.fillStyle = '#00FF00'; // Green for index\n        ctx.fill();\n\n        // Draw midpoint\n        const midX = (tx + ix) / 2;\n        const midY = (ty + iy) / 2;\n        ctx.beginPath();\n        ctx.arc(midX, midY, 8, 0, 2 * Math.PI);\n        ctx.fillStyle = '#00FFFF'; // Cyan for midpoint\n        ctx.fill();\n      }\n\n      // Calculate pinch detection\n      const tx = thumbTip.x * w;\n      const ty = thumbTip.y * h;\n      const ix = indexTip.x * w;\n      const iy = indexTip.y * h;\n\n      // Calculate pinch distance\n      const pinchDistance = Math.hypot(tx - ix, ty - iy);\n\n      // Calculate average distance of all hand connections for normalization\n      let totalDistance = 0;\n      let connectionCount = 0;\n      for (const [a, b] of HAND_CONNECTIONS) {\n        const sx = hand[a].x * w;\n        const sy = hand[a].y * h;\n        const ex = hand[b].x * w;\n        const ey = hand[b].y * h;\n        totalDistance += Math.hypot(sx - ex, sy - ey);\n        connectionCount++;\n      }\n      const avgConnectionDistance = connectionCount ? totalDistance / connectionCount : 1;\n\n      // Calculate pinch strength (0-1, normalized by hand scale)\n      const pinchThreshold = settings.pinchSensitivity || 0.2; // Default 20%\n      const normalizedPinchDistance = Math.min(Math.max((pinchDistance - 10) / (avgConnectionDistance * 4.5), 0), 1);\n      const pinchStrength = Math.max(0, 1 - normalizedPinchDistance / pinchThreshold);\n      const isPinching = normalizedPinchDistance < pinchThreshold;\n\n      // Calculate midpoint between thumb and index finger\n      const midpointX = (thumbTip.x + indexTip.x) / 2;\n      const midpointY = (thumbTip.y + indexTip.y) / 2;\n\n      // Convert to screen coordinates\n      const screenX = (1 - midpointX) * window.innerWidth; // Mirror the X coordinate\n      const screenY = midpointY * window.innerHeight;\n\n      // Send position and pinch data to parent component\n      if (onHandPosition) {\n        onHandPosition({\n          x: screenX,\n          y: screenY,\n          detected: true,\n          isPinching,\n          pinchStrength: Math.min(pinchStrength, 1),\n          // Clamp to 0-1\n          pinchDistance: normalizedPinchDistance\n        });\n      }\n    } else {\n      // No hand detected\n      if (onHandPosition) {\n        onHandPosition({\n          detected: false\n        });\n      }\n    }\n  };\n  const handleMouseDown = e => {\n    setIsDraggingPreview(true);\n    setDragStart({\n      x: e.clientX - previewPosition.x,\n      y: e.clientY - previewPosition.y\n    });\n  };\n  const handleMouseMove = e => {\n    if (isDraggingPreview) {\n      const newX = e.clientX - dragStart.x;\n      const newY = e.clientY - dragStart.y;\n\n      // Keep preview within viewport bounds\n      const maxX = window.innerWidth - 272; // 256px width + 16px padding\n      const maxY = window.innerHeight - 200; // 192px height + 8px padding\n\n      setPreviewPosition({\n        x: Math.max(0, Math.min(newX, maxX)),\n        y: Math.max(0, Math.min(newY, maxY))\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDraggingPreview(false);\n  };\n\n  // Add global mouse event listeners\n  useEffect(() => {\n    if (isDraggingPreview) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDraggingPreview, dragStart]);\n  if (!isEnabled) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed z-40 ${showPreview ? 'block' : 'hidden'}`,\n    style: {\n      left: `${previewPosition.x}px`,\n      top: `${previewPosition.y}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black/80 backdrop-blur-sm rounded-lg p-2 cursor-move select-none\",\n      onMouseDown: handleMouseDown,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-xs mb-2 text-center\",\n        children: \"Hand Tracking Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          className: \"hidden\",\n          playsInline: true,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"w-64 h-48 object-contain bg-black rounded\",\n          style: {\n            transform: 'scaleX(-1)' // Mirror the camera view\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(HandTrackingService, \"GDuNVmkUFAWDqZAmDJ2xVHmmdng=\");\n_c = HandTrackingService;\nexport default HandTrackingService;\nvar _c;\n$RefreshReg$(_c, \"HandTrackingService\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Hands","Camera","drawConnectors","drawLandmarks","jsxDEV","_jsxDEV","HAND_CONNECTIONS","HandTrackingService","onHandPosition","settings","enabled","_s","_ref","videoRef","canvasRef","hands","setHands","camera","setCamera","isEnabled","setIsEnabled","showPreview","setShowPreview","previewPosition","setPreviewPosition","x","y","isDraggingPreview","setIsDraggingPreview","dragStart","setDragStart","_ref2","stop","detected","initializeHandTracking","handsInstance","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","current","cameraInstance","onFrame","send","image","width","height","start","error","console","results","canvas","video","ctx","getContext","w","videoWidth","h","videoHeight","clearRect","drawImage","multiHandLandmarks","length","hand","thumbTip","indexTip","color","lineWidth","tx","ty","ix","iy","beginPath","arc","Math","PI","fillStyle","fill","midX","midY","pinchDistance","hypot","totalDistance","connectionCount","a","b","sx","sy","ex","ey","avgConnectionDistance","pinchThreshold","pinchSensitivity","normalizedPinchDistance","min","max","pinchStrength","isPinching","midpointX","midpointY","screenX","window","innerWidth","screenY","innerHeight","handleMouseDown","e","clientX","clientY","handleMouseMove","newX","newY","maxX","maxY","handleMouseUp","document","addEventListener","removeEventListener","className","style","left","top","children","onMouseDown","fileName","_jsxFileName","lineNumber","columnNumber","ref","playsInline","autoPlay","muted","transform","_c","$RefreshReg$"],"sources":["C:/Users/Kcoda/Desktop/Projects/Reflect/src/components/HandTrackingService.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Hands } from '@mediapipe/hands';\r\nimport { Camera } from '@mediapipe/camera_utils';\r\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\r\n\r\n// Define hand connections manually if import fails\r\nconst HAND_CONNECTIONS = [\r\n  [0, 1], [1, 2], [2, 3], [3, 4],       // Thumb\r\n  [0, 5], [5, 6], [6, 7], [7, 8],       // Index finger\r\n  [0, 9], [9, 10], [10, 11], [11, 12],  // Middle finger\r\n  [0, 13], [13, 14], [14, 15], [15, 16], // Ring finger\r\n  [0, 17], [17, 18], [18, 19], [19, 20], // Pinky\r\n  [5, 9], [9, 13], [13, 17]             // Palm connections\r\n];\r\n\r\nconst HandTrackingService = ({ onHandPosition, settings = {}, enabled }) => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [hands, setHands] = useState(null); // eslint-disable-line no-unused-vars\r\n  const [camera, setCamera] = useState(null);\r\n  const [isEnabled, setIsEnabled] = useState(enabled ?? settings.enabled ?? false);\r\n  const [showPreview, setShowPreview] = useState(settings.showPreview || false);\r\n  const [previewPosition, setPreviewPosition] = useState({ x: 16, y: 16 }); // Default position (top-4 left-4 = 16px)\r\n  const [isDraggingPreview, setIsDraggingPreview] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    setIsEnabled(enabled ?? settings.enabled ?? false);\r\n    setShowPreview(settings.showPreview || false);\r\n  }, [enabled, settings]);\r\n\r\n  useEffect(() => {\r\n    if (!isEnabled) {\r\n      // Clean up when disabled\r\n      if (camera) {\r\n        camera.stop();\r\n        setCamera(null);\r\n      }\r\n      if (onHandPosition) {\r\n        onHandPosition({ detected: false });\r\n      }\r\n      return;\r\n    }\r\n\r\n    const initializeHandTracking = async () => {\r\n      try {\r\n        // Initialize MediaPipe Hands\r\n        const handsInstance = new Hands({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n          }\r\n        });\r\n\r\n        handsInstance.setOptions({\r\n          maxNumHands: 1,\r\n          modelComplexity: 1,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5\r\n        });\r\n\r\n        handsInstance.onResults(onResults);\r\n        setHands(handsInstance);\r\n\r\n        // Initialize camera\r\n        if (videoRef.current) {\r\n          const cameraInstance = new Camera(videoRef.current, {\r\n            onFrame: async () => {\r\n              await handsInstance.send({ image: videoRef.current });\r\n            },\r\n            width: 640,\r\n            height: 480\r\n          });\r\n          \r\n          await cameraInstance.start();\r\n          setCamera(cameraInstance);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing hand tracking:', error);\r\n      }\r\n    };\r\n\r\n    initializeHandTracking();\r\n\r\n    return () => {\r\n      if (camera) {\r\n        camera.stop();\r\n      }\r\n    };\r\n  }, [isEnabled]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onResults = (results) => {\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n    \r\n    if (!canvas || !video) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    const w = canvas.width = video.videoWidth;\r\n    const h = canvas.height = video.videoHeight;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, w, h);\r\n\r\n    // Draw the video frame if preview is enabled\r\n    if (showPreview) {\r\n      ctx.drawImage(video, 0, 0, w, h);\r\n    }\r\n\r\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\r\n      const hand = results.multiHandLandmarks[0];\r\n      \r\n      // Get thumb tip (landmark 4) and index tip (landmark 8)\r\n      const thumbTip = hand[4];\r\n      const indexTip = hand[8];\r\n      \r\n      if (showPreview) {\r\n        // Draw hand connections\r\n        drawConnectors(ctx, hand, HAND_CONNECTIONS, {\r\n          color: '#00FF00',\r\n          lineWidth: 2\r\n        });\r\n        \r\n        // Draw all landmarks\r\n        drawLandmarks(ctx, hand, {\r\n          color: '#FF0000',\r\n          lineWidth: 1\r\n        });\r\n        \r\n        // Highlight thumb tip and index finger tip\r\n        const tx = thumbTip.x * w;\r\n        const ty = thumbTip.y * h;\r\n        const ix = indexTip.x * w;\r\n        const iy = indexTip.y * h;\r\n        \r\n        // Draw thumb tip\r\n        ctx.beginPath();\r\n        ctx.arc(tx, ty, 6, 0, 2 * Math.PI);\r\n        ctx.fillStyle = '#FF00FF'; // Magenta for thumb\r\n        ctx.fill();\r\n        \r\n        // Draw index tip\r\n        ctx.beginPath();\r\n        ctx.arc(ix, iy, 6, 0, 2 * Math.PI);\r\n        ctx.fillStyle = '#00FF00'; // Green for index\r\n        ctx.fill();\r\n        \r\n        // Draw midpoint\r\n        const midX = (tx + ix) / 2;\r\n        const midY = (ty + iy) / 2;\r\n        ctx.beginPath();\r\n        ctx.arc(midX, midY, 8, 0, 2 * Math.PI);\r\n        ctx.fillStyle = '#00FFFF'; // Cyan for midpoint\r\n        ctx.fill();\r\n      }\r\n\r\n      // Calculate pinch detection\r\n      const tx = thumbTip.x * w;\r\n      const ty = thumbTip.y * h;\r\n      const ix = indexTip.x * w;\r\n      const iy = indexTip.y * h;\r\n      \r\n      // Calculate pinch distance\r\n      const pinchDistance = Math.hypot(tx - ix, ty - iy);\r\n      \r\n      // Calculate average distance of all hand connections for normalization\r\n      let totalDistance = 0;\r\n      let connectionCount = 0;\r\n      for (const [a, b] of HAND_CONNECTIONS) {\r\n        const sx = hand[a].x * w;\r\n        const sy = hand[a].y * h;\r\n        const ex = hand[b].x * w;\r\n        const ey = hand[b].y * h;\r\n        totalDistance += Math.hypot(sx - ex, sy - ey);\r\n        connectionCount++;\r\n      }\r\n      const avgConnectionDistance = connectionCount ? totalDistance / connectionCount : 1;\r\n      \r\n      // Calculate pinch strength (0-1, normalized by hand scale)\r\n      const pinchThreshold = settings.pinchSensitivity || 0.2; // Default 20%\r\n      const normalizedPinchDistance = Math.min(Math.max((pinchDistance - 10) / (avgConnectionDistance * 4.5), 0), 1);\r\n      const pinchStrength = Math.max(0, 1 - (normalizedPinchDistance / pinchThreshold));\r\n      const isPinching = normalizedPinchDistance < pinchThreshold;\r\n\r\n      // Calculate midpoint between thumb and index finger\r\n      const midpointX = (thumbTip.x + indexTip.x) / 2;\r\n      const midpointY = (thumbTip.y + indexTip.y) / 2;\r\n      \r\n      // Convert to screen coordinates\r\n      const screenX = (1 - midpointX) * window.innerWidth; // Mirror the X coordinate\r\n      const screenY = midpointY * window.innerHeight;\r\n      \r\n      // Send position and pinch data to parent component\r\n      if (onHandPosition) {\r\n        onHandPosition({\r\n          x: screenX,\r\n          y: screenY,\r\n          detected: true,\r\n          isPinching,\r\n          pinchStrength: Math.min(pinchStrength, 1), // Clamp to 0-1\r\n          pinchDistance: normalizedPinchDistance\r\n        });\r\n      }\r\n    } else {\r\n      // No hand detected\r\n      if (onHandPosition) {\r\n        onHandPosition({ detected: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    setIsDraggingPreview(true);\r\n    setDragStart({\r\n      x: e.clientX - previewPosition.x,\r\n      y: e.clientY - previewPosition.y\r\n    });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDraggingPreview) {\r\n      const newX = e.clientX - dragStart.x;\r\n      const newY = e.clientY - dragStart.y;\r\n      \r\n      // Keep preview within viewport bounds\r\n      const maxX = window.innerWidth - 272; // 256px width + 16px padding\r\n      const maxY = window.innerHeight - 200; // 192px height + 8px padding\r\n      \r\n      setPreviewPosition({\r\n        x: Math.max(0, Math.min(newX, maxX)),\r\n        y: Math.max(0, Math.min(newY, maxY))\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDraggingPreview(false);\r\n  };\r\n\r\n  // Add global mouse event listeners\r\n  useEffect(() => {\r\n    if (isDraggingPreview) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n      \r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n    }\r\n  }, [isDraggingPreview, dragStart]);\r\n\r\n  if (!isEnabled) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={`fixed z-40 ${showPreview ? 'block' : 'hidden'}`}\r\n      style={{\r\n        left: `${previewPosition.x}px`,\r\n        top: `${previewPosition.y}px`\r\n      }}\r\n    >\r\n      <div \r\n        className=\"bg-black/80 backdrop-blur-sm rounded-lg p-2 cursor-move select-none\"\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <div className=\"text-white text-xs mb-2 text-center\">Hand Tracking Preview</div>\r\n        <div className=\"relative\">\r\n          <video\r\n            ref={videoRef}\r\n            className=\"hidden\"\r\n            playsInline\r\n            autoPlay\r\n            muted\r\n          />\r\n          <canvas\r\n            ref={canvasRef}\r\n            className=\"w-64 h-48 object-contain bg-black rounded\"\r\n            style={{ \r\n              transform: 'scaleX(-1)', // Mirror the camera view\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandTrackingService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}